{"version":3,"sources":["client/assets/avatar-icon.png","client/components/AuthGoogleButton.tsx","client/constants/auth.constants.ts","client/components/AuthProfile.tsx","client/utils/auth.utils.ts","client/constants/style.constants.ts","client/api/user.api.ts","client/api/word.api.ts","client/hooks/reducer.ts","client/hooks/store.ts","client/hooks/appContext.ts","client/components/Auth.tsx","client/components/Header.tsx","client/components/WordList.tsx","client/components/WelcomePage.tsx","client/api/search.api.ts","client/components/Search.tsx","client/components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AuthGoogleButton","id","useStyles","createUseStyles","profileContainer","display","alignItems","justifyContent","zIndex","profileImage","borderRadius","height","marginRight","profileInfo","flexDirection","padding","userName","fontSize","email","fontWeight","AuthProfile","profileImageUrl","name","classes","className","alt","src","renderGoogleOAuthButton","handleSignIn","document","getElementById","window","gapi","signin2","render","scope","width","longtitle","theme","onsuccess","onfailure","console","log","loadGoogleOAuthScript","googleScriptTag","createElement","async","defer","onload","load","auth2","init","client_id","process","isSignedIn","listen","isUserSignedIn","currentUser","get","user","getBasicProfile","handleGoogleOAuthOnLoad","body","appendChild","signOutGoogleUser","callback","googleApi","hasOwnProperty","isAppUser","getAuthInstance","signOut","then","catch","signInGoogleUser","isGoogleUser","profile","getName","getEmail","getImageUrl","BODY_WIDTH_MIN_MAX","minWidth","maxWidth","createUser","userId","fetch","method","headers","JSON","stringify","createClaimedWord","wordId","res","json","deleteClaimedWord","reducer","state","action","type","payload","claimedWords","store","initUserState","appContextDefaultVal","handleAuth","claimWord","unClaimWord","AppContext","React","createContext","authIconButton","backgroundImage","Avatar","backgroundSize","authDropdown","position","top","HEADER_HEIGHT","right","border","minHeight","margin","authAction","marginTop","signOutButton","screen","left","background","Auth","useContext","useState","isAuthOpen","setIsAuthOpen","useEffect","handleAuthButtonClick","e","target","currentTarget","role","onClick","header","boxSizing","logo","Header","COMMON_WORD_DEF_STYLE","wordList","wordContainer","word","function","definition","deleteButton","alignSelf","WordCard","def","func","WordList","words","map","idx","key","welcomePage","paddingBottom","description","textAlign","WelcomePage","getSearchResult","query","result","search","searchResult","searchInput","Search","searchedWords","setSearchedWords","claimedWordsHash","setClaimedWordsHash","setQuery","handleSubmit","a","preventDefault","fetchedWords","Object","keys","length","values","filter","val","hash","forEach","onSubmit","onChange","value","placeholder","undefined","fontFamily","signedInContent","App","appContextVal","useReducer","dispatch","ensureUserRegistered","useCallback","response","Array","isArray","fetchAndSetClaimedWords","useAppContextVal","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4dd654aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-icon.782adc2b.png\";","import React from 'react'\n\nimport { GOOGLE_OAUTH_BUTTON_ID } from 'client/constants/auth.constants'\n\nconst AuthGoogleButton: React.FC = () => {\n  return <div id={GOOGLE_OAUTH_BUTTON_ID} />\n}\n\nexport default AuthGoogleButton\n","export const GOOGLE_OAUTH_BUTTON_ID = 'google-oauth'\n","import React from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport { User } from 'client/types/auth.types'\n\nconst useStyles = createUseStyles({\n  profileContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2\n  },\n  profileImage: {\n    borderRadius: '50%',\n    height: 55,\n    marginRight: 10\n  },\n  profileInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    padding: 10\n  },\n  userName: {\n    fontSize: 18\n  },\n  email: {\n    fontSize: 13,\n    fontWeight: 'lighter'\n  }\n})\n\nconst AuthProfile: React.FC<User> = ({ profileImageUrl, name, email }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.profileContainer}>\n      <img\n        alt=\"profile\"\n        className={classes.profileImage}\n        src={profileImageUrl || ''}\n      />\n      <div className={classes.profileInfo}>\n        <div className={classes.userName}>{name}</div>\n        <div className={classes.email}>{email}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthProfile\n","import { GOOGLE_OAUTH_BUTTON_ID } from 'client/constants/auth.constants'\nimport {\n  GoogleUser,\n  User,\n  handleGoogleUserSignIn\n} from 'client/types/auth.types'\n\nexport const renderGoogleOAuthButton = (\n  handleSignIn: handleGoogleUserSignIn\n): void => {\n  if (document.getElementById(GOOGLE_OAUTH_BUTTON_ID)) {\n    ;(window as any).gapi.signin2.render(GOOGLE_OAUTH_BUTTON_ID, {\n      scope: 'profile email',\n      width: 240,\n      height: 50,\n      longtitle: true,\n      theme: 'dark',\n      onsuccess: handleSignIn,\n      onfailure: console.log\n    })\n  }\n}\n\nconst handleGoogleOAuthOnLoad = (\n  handleSignIn: handleGoogleUserSignIn\n): void => {\n  ;(window as any).gapi.load('auth2', () => {\n    const auth2 = (window as any).gapi.auth2.init({\n      client_id: process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID,\n      scope: 'profile email'\n    })\n\n    /**\n     * Listen for sign-in state changes.\n     * e.g.) session expired\n     * this is also to presist signed in user\n     */\n    auth2.isSignedIn.listen((isUserSignedIn: boolean) => {\n      isUserSignedIn\n        ? handleSignIn(auth2.currentUser.get())\n        : renderGoogleOAuthButton(handleSignIn)\n    })\n\n    /**\n     * Listen for changes to current user.\n     * e.g.) user signs out, closes and re-opens browser\n     */\n    auth2.currentUser.listen((user: GoogleUser) => {\n      if (!user.getBasicProfile()) {\n        renderGoogleOAuthButton(handleSignIn)\n      }\n    })\n  })\n}\n\nexport const loadGoogleOAuthScript = (\n  handleSignIn: handleGoogleUserSignIn\n): void => {\n  const googleScriptTag = document.createElement('script')\n\n  googleScriptTag.src = 'https://apis.google.com/js/platform.js'\n  googleScriptTag.async = true\n  googleScriptTag.defer = true\n  googleScriptTag.onload = () => handleGoogleOAuthOnLoad(handleSignIn)\n\n  document.body.appendChild(googleScriptTag)\n}\n\ntype AuthActionArg = {\n  user: User | GoogleUser\n  callback: (user: User) => void\n}\nconst isGoogleUser = (user: User | GoogleUser): user is GoogleUser =>\n  !!((user as GoogleUser).getBasicProfile && (user as GoogleUser).isSignedIn)\nconst isAppUser = (user: User | GoogleUser): user is User =>\n  !!(\n    (user as User).hasOwnProperty('name') &&\n    (user as User).hasOwnProperty('email') &&\n    (user as User).hasOwnProperty('profileImageUrl')\n  )\n\nexport const signOutGoogleUser = ({ user, callback }: AuthActionArg): void => {\n  const googleApi = (window as any).gapi\n\n  if (googleApi && isAppUser(user)) {\n    googleApi.auth2\n      .getAuthInstance()\n      .signOut()\n      .then(() => callback(user))\n      .catch(console.log)\n  }\n}\n\nexport const signInGoogleUser = ({ user, callback }: AuthActionArg): void => {\n  if (isGoogleUser(user)) {\n    const profile = user.getBasicProfile()\n\n    callback({\n      isSignedIn: user.isSignedIn(),\n      name: profile.getName(),\n      email: profile.getEmail(),\n      profileImageUrl: profile.getImageUrl()\n    })\n  }\n}\n","export const HEADER_HEIGHT = 80\nexport const BODY_WIDTH_MIN_MAX = {\n  minWidth: 300,\n  maxWidth: 500\n}\nexport const AUTH_SCREEN_ZINDEX = 0\nexport const AUTH_ELE_ZINDEX = 1\n","export function getUser(userId: string | null) {\n  return fetch(`/users?id=${userId}`)\n    .then(res => res.json())\n    .catch(console.log)\n}\n\nexport function createUser(userId: string | null) {\n  return fetch('/users/new', {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({ userId })\n  }).catch(console.log)\n}\n","export function getClaimedWords(userId: string | null) {\n  return fetch(`/words/user?id=${userId}`)\n    .then(res => res.json())\n    .catch(console.log)\n}\n\nexport function createClaimedWord(wordId: number, userId: string | null) {\n  return fetch('/words/claim', {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({ userId, wordId })\n  })\n    .then(res => res.json())\n    .catch(console.log)\n}\n\nexport function deleteClaimedWord(wordId: number, userId: string | null) {\n  return fetch('/words/unclaim', {\n    method: 'DELETE',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({ userId, wordId })\n  })\n    .then(res => res.json())\n    .catch(console.log)\n}\n","import { User } from 'client/types/auth.types'\nimport { Word } from 'client/types/word.types'\n\ntype State = {\n  user: User\n  claimedWords: Word[]\n}\n\ntype Action = {\n  type: string\n  payload: any\n}\n\nexport const reducer = (state: any, action: Action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload\n      }\n    case 'SET_CLAIMED_WORDS':\n      return {\n        ...state,\n        claimedWords: action.payload\n      }\n    default:\n      return {}\n  }\n}\n","export const store = {\n  user: {\n    isSignedIn: false,\n    name: null,\n    email: null,\n    profileImageUrl: null\n  },\n  claimedWords: []\n}\n","import React, { useCallback, useEffect, useReducer } from 'react'\n\nimport { GoogleUser, User } from 'client/types/auth.types'\nimport {\n  loadGoogleOAuthScript,\n  signInGoogleUser,\n  signOutGoogleUser\n} from 'client/utils/auth.utils'\nimport { Word } from 'client/types/word.types'\nimport { createUser, getUser } from 'client/api/user.api'\nimport {\n  createClaimedWord,\n  deleteClaimedWord,\n  getClaimedWords\n} from 'client/api/word.api'\nimport { reducer } from 'client/hooks/reducer'\nimport { store } from 'client/hooks/store'\n\nconst initUserState = {\n  isSignedIn: false,\n  name: null,\n  email: null,\n  profileImageUrl: null\n}\n\nconst appContextDefaultVal = {\n  state: {\n    user: initUserState,\n    claimedWords: []\n  },\n  handleAuth: (user?: GoogleUser) => {},\n  claimWord: (wordId: number) => {},\n  unClaimWord: (wordId: number) => {}\n}\n\nexport type AppContextVal = {\n  state: {\n    user: User\n    claimedWords: Word[]\n  }\n  handleAuth: (user?: GoogleUser) => void\n  claimWord: (wordId: number) => void\n  unClaimWord: (wordId: number) => void\n}\n\nexport function useAppContextVal(): AppContextVal {\n  const [state, dispatch] = useReducer(reducer, store)\n  const { user } = state\n\n  const handleAuth = (user?: GoogleUser): void => {\n    const authAction = user ? signInGoogleUser : signOutGoogleUser\n    authAction({\n      user: user ?? initUserState,\n      callback: (user: User) => {\n        dispatch({ type: 'SET_USER', payload: user })\n      }\n    })\n  }\n\n  const ensureUserRegistered = useCallback(async () => {\n    const response = await getUser(user.email)\n\n    if (Array.isArray(response) && response.length === 0) {\n      createUser(user.email)\n    }\n  }, [user.email])\n\n  const fetchAndSetClaimedWords = useCallback(async () => {\n    dispatch({\n      type: 'SET_CLAIMED_WORDS',\n      payload: (await getClaimedWords(user.email)) ?? []\n    })\n  }, [user.email])\n\n  const claimWord = async (wordId: number) => {\n    await createClaimedWord(wordId, user.email)\n    await fetchAndSetClaimedWords()\n  }\n\n  const unClaimWord = async (wordId: number) => {\n    await deleteClaimedWord(wordId, user.email)\n    await fetchAndSetClaimedWords()\n  }\n\n  useEffect(() => {\n    loadGoogleOAuthScript(handleAuth)\n  }, [])\n\n  useEffect(() => {\n    if (user.isSignedIn && user.email) {\n      ensureUserRegistered()\n      fetchAndSetClaimedWords()\n    }\n  }, [user, fetchAndSetClaimedWords, ensureUserRegistered])\n\n  return {\n    state,\n    /**\n     * TODO: separate out helper funcs and pass in dispatch instead\n     */\n    handleAuth,\n    claimWord,\n    unClaimWord\n  }\n}\n\nexport const AppContext = React.createContext<AppContextVal>(\n  appContextDefaultVal\n)\n","import React, { MouseEvent, useContext, useEffect, useState } from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport AuthGoogleButton from 'client/components/AuthGoogleButton'\nimport AuthProfile from 'client/components/AuthProfile'\nimport { renderGoogleOAuthButton } from 'client/utils/auth.utils'\nimport {\n  AUTH_ELE_ZINDEX,\n  AUTH_SCREEN_ZINDEX,\n  HEADER_HEIGHT\n} from 'client/constants/style.constants'\nimport { GOOGLE_OAUTH_BUTTON_ID } from 'client/constants/auth.constants'\nimport Avatar from 'client/assets/avatar-icon.png'\nimport { AppContext } from 'client/hooks/appContext'\n\nconst useStyles = createUseStyles({\n  authIconButton: {\n    borderRadius: '50%',\n    height: 45,\n    width: 45,\n    backgroundImage: (profileImageUrl: string | null) =>\n      `url(${profileImageUrl ?? Avatar})`,\n    backgroundSize: 'cover',\n    zIndex: AUTH_ELE_ZINDEX\n  },\n  authDropdown: {\n    position: 'absolute',\n    top: HEADER_HEIGHT - 15,\n    right: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    border: '1px solid black',\n    padding: 30,\n    minWidth: 250,\n    minHeight: 135,\n    [`& #${GOOGLE_OAUTH_BUTTON_ID}`]: {\n      margin: 'auto'\n    }\n  },\n  authAction: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  signOutButton: {\n    width: 100,\n    height: 25,\n    margin: 5\n  },\n  screen: {\n    width: '100vw',\n    height: '100vh',\n    top: 0,\n    left: 0,\n    position: 'absolute',\n    background: 'transparent',\n    zIndex: AUTH_SCREEN_ZINDEX\n  }\n})\n\nconst Auth: React.FC = () => {\n  const { state, handleAuth } = useContext(AppContext)\n  const { user } = state\n  const [isAuthOpen, setIsAuthOpen] = useState<boolean>(false)\n  const classes = useStyles(user.profileImageUrl)\n\n  /**\n   * button needs to be re-rendered when re-mounted\n   */\n  useEffect(() => {\n    if (isAuthOpen && !user.isSignedIn) {\n      renderGoogleOAuthButton(handleAuth)\n    }\n  }, [isAuthOpen, user.isSignedIn, handleAuth])\n\n  /**\n   * close authDropdown when change in isSignedIn\n   */\n  useEffect(() => setIsAuthOpen(false), [user.isSignedIn])\n\n  const handleAuthButtonClick = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      setIsAuthOpen(!isAuthOpen)\n    }\n  }\n\n  return user.isSignedIn ? (\n    <>\n      <div\n        role=\"button\"\n        onClick={handleAuthButtonClick}\n        className={classes.authIconButton}\n      >\n        {isAuthOpen && (\n          <div className={classes.authDropdown}>\n            {user.isSignedIn ? (\n              <>\n                <AuthProfile {...user} />\n                <div className={classes.authAction}>\n                  <button\n                    className={classes.signOutButton}\n                    onClick={() => handleAuth()}\n                  >\n                    Sign out\n                  </button>\n                </div>\n              </>\n            ) : (\n              <AuthGoogleButton />\n            )}\n          </div>\n        )}\n      </div>\n      {isAuthOpen && (\n        <div className={classes.screen} onClick={handleAuthButtonClick} />\n      )}\n    </>\n  ) : null\n}\n\nexport default Auth\n","import React from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport Auth from 'client/components/Auth'\nimport { HEADER_HEIGHT } from 'client/constants/style.constants'\n\nconst useStyles = createUseStyles({\n  header: {\n    top: 0,\n    left: 0,\n    width: '100vw',\n    boxSizing: 'border-box',\n    height: HEADER_HEIGHT,\n    background: '#ffff',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 30px'\n  },\n  logo: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  }\n})\n\nconst Header: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.logo}>Wordful</div>\n      <Auth />\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useContext } from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport { Word } from 'client/types/word.types'\nimport { AppContext } from 'client/hooks/appContext'\nimport { BODY_WIDTH_MIN_MAX } from 'client/constants/style.constants'\n\nconst COMMON_WORD_DEF_STYLE = {\n  padding: '20px 10px 20px 30px',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center'\n}\n\nconst useStyles = createUseStyles({\n  wordList: {\n    ...BODY_WIDTH_MIN_MAX,\n    padding: 10\n  },\n  wordContainer: {\n    marginTop: 20,\n    border: '1px solid black',\n    display: 'flex',\n    flexDirection: 'column',\n    height: 180\n  },\n  word: {\n    ...COMMON_WORD_DEF_STYLE,\n    fontSize: 30,\n    fontWeight: 'bold',\n    background: '#0001',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  function: {\n    fontSize: 15,\n    fontWeight: 'normal',\n    padding: '0px 20px'\n  },\n  definition: {\n    ...COMMON_WORD_DEF_STYLE,\n    fontSize: 15\n  },\n  deleteButton: {\n    width: 50,\n    alignSelf: 'flex-end',\n    marginRight: 20\n  }\n})\n\ntype WordProps = {\n  word: string\n  func: string\n  def: string\n  id: number\n}\nconst WordCard: React.FC<WordProps> = ({ word, def, func, id }) => {\n  const classes = useStyles()\n  const { unClaimWord } = useContext(AppContext)\n\n  return (\n    <div className={classes.wordContainer}>\n      <div className={classes.word}>\n        {word}\n        <div className={classes.function}>{func}</div>\n      </div>\n      <div className={classes.definition}>{def}</div>\n      <button className={classes.deleteButton} onClick={() => unClaimWord(id)}>\n        delete\n      </button>\n    </div>\n  )\n}\n\ntype WordListProps = {\n  words: Word[]\n}\nconst WordList: React.FC<WordListProps> = ({ words }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.wordList}>\n      {words.map((word, idx) => (\n        <WordCard\n          id={word.id}\n          word={word.name}\n          def={word.definition}\n          func={word.function}\n          key={`${word}-${idx}`}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default WordList\n","import React from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport AuthGoogleButton from 'client/components/AuthGoogleButton'\n\nconst useStyles = createUseStyles({\n  welcomePage: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 80\n  },\n  description: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 35,\n    marginTop: 100\n  }\n})\n\nconst WelcomePage: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.welcomePage}>\n      <div className={classes.description}>\n        Learn new words while having fun\n      </div>\n      <AuthGoogleButton />\n    </div>\n  )\n}\n\nexport default WelcomePage\n","export function getSearchResult(query: string) {\n  return fetch(`/words?query=${query}`)\n    .then(res => res.json())\n    .catch(console.log)\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport { Word } from 'client/types/word.types'\nimport { AppContext } from 'client/hooks/appContext'\nimport { BODY_WIDTH_MIN_MAX } from 'client/constants/style.constants'\nimport { getSearchResult } from 'client/api/search.api'\n\nconst useStyles = createUseStyles({\n  result: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  search: {\n    ...BODY_WIDTH_MIN_MAX,\n    padding: 10\n  },\n  searchResult: {\n    padding: 10\n  },\n  searchInput: {\n    fontSize: 15,\n    padding: 10,\n    width: '100%',\n    height: 40,\n    boxSizing: 'border-box'\n  }\n})\n\nconst Search: React.FC = () => {\n  const classes = useStyles()\n  /**\n   * TODO: use https://www.wordsapi.com/ instead of internal mock word db\n   */\n  const [searchedWords, setSearchedWords] = useState<Word[]>([])\n  const [claimedWordsHash, setClaimedWordsHash] = useState<{\n    [word: string]: boolean\n  }>({})\n  const [query, setQuery] = useState<string>('')\n  const { claimWord, state } = useContext(AppContext)\n  const { claimedWords } = state\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const fetchedWords = (await getSearchResult(query)) ?? []\n    setSearchedWords(fetchedWords)\n  }\n\n  useEffect(() => {\n    if (\n      Object.keys(claimedWords).length !==\n      Object.values(claimedWordsHash).filter(val => val).length\n    ) {\n      /**\n       * build claimedWordsHash for O(1) read\n       */\n      let hash: { [word: string]: boolean } = {}\n      claimedWords.forEach(word => {\n        hash[word.name] = true\n      })\n      setClaimedWordsHash(hash)\n    } else if (\n      /**\n       * On deleting the last claimed word\n       */\n      Object.keys(claimedWords).length === 0 &&\n      Object.values(claimedWordsHash).filter(val => val).length > 0\n    ) {\n      setClaimedWordsHash({})\n    }\n  }, [claimedWords, claimedWordsHash])\n\n  return (\n    <div className={classes.search}>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={classes.searchInput}\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          type={'text'}\n          name={'wordSearchInput'}\n          placeholder={'Type and enter'}\n        />\n      </form>\n      <div className={classes.searchResult}>\n        {searchedWords.map((word, idx) => (\n          <div key={idx} className={classes.result}>\n            {word.name}\n            {claimedWordsHash[word.name] !== undefined ? (\n              <div>{'\\u2705'}</div> // checkmark\n            ) : (\n              <button onClick={() => claimWord(word.id)}>Add</button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { createUseStyles } from 'react-jss'\n\nimport Header from 'client/components/Header'\n// import Dashboard from 'client/components/Dashboard'\nimport WordList from 'client/components/WordList'\nimport { BODY_WIDTH_MIN_MAX } from 'client/constants/style.constants'\nimport { AppContext, useAppContextVal } from 'client/hooks/appContext'\nimport WelcomePage from 'client/components/WelcomePage'\nimport Search from 'client/components/Search'\n\nconst useStyles = createUseStyles({\n  '@global': {\n    body: {\n      fontFamily: 'Open Sans, sans-serif',\n      top: 0,\n      left: 0,\n      margin: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100vw',\n      height: '100vh'\n    },\n    '#root': {\n      width: '100vw',\n      height: '100vh'\n    }\n  },\n  signedInContent: {\n    ...BODY_WIDTH_MIN_MAX,\n    margin: 'auto',\n    paddingBottom: 80\n  }\n})\n\nconst App: React.FC = () => {\n  const appContextVal = useAppContextVal()\n  const { user, claimedWords } = appContextVal.state\n  const classes = useStyles()\n\n  return (\n    <AppContext.Provider value={appContextVal}>\n      <Header />\n      {user.isSignedIn ? (\n        <div className={classes.signedInContent}>\n          {/* <Dashboard /> */}\n          <Search />\n          <WordList words={claimedWords} />\n        </div>\n      ) : (\n        <WelcomePage />\n      )}\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'client/components/App'\nimport reportWebVitals from 'reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}